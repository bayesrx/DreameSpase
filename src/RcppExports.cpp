// Generated by using Rcpp::compileAttributes() -> do not edit by hand
// Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393

#include <RcppArmadillo.h>
#include <Rcpp.h>

using namespace Rcpp;

#ifdef RCPP_USE_GLOBAL_ROSTREAM
Rcpp::Rostream<true>&  Rcpp::Rcout = Rcpp::Rcpp_cout_get();
Rcpp::Rostream<false>& Rcpp::Rcerr = Rcpp::Rcpp_cerr_get();
#endif

// FitSSModel
List FitSSModel(arma::vec y, arma::vec y_counts, arma::mat X, std::vector<int> groups, int n_groups, String method, String alpha_prior, std::vector<arma::mat> W, double phi, double correction, bool intercept, int burnin, int samples, int thinning, bool verbose, int progress_every, bool spike_optim, int update_spike_every, bool sample_delta, bool sample_gamma, bool sample_d, double nu_2_init, arma::vec alpha_init, arma::vec delta_init, int rho_init, double tau_2_delta_init, std::vector<double> psi_2_init, std::vector<arma::mat> eta_init, arma::vec d_init, arma::vec gamma_init, arma::vec d_groups_init, arma::vec gamma_groups_init, double P_gamma, double P_d, double nu_2_alpha, double nu_2_beta, double tau_s_alpha, double sigma_2_alpha_spike, double sigma_2_alpha_slab, arma::vec gamma_prior, double a_gamma, double b_gamma, double a_d, double b_d, arma::vec nu_j, double xi, arma::vec lambda_alpha, std::vector<double> grid_prior_values, arma::vec rho_prior_probs, double tau_2_delta_alpha, double tau_2_delta_beta, double psi_2_alpha, double psi_2_beta, double sigma_2_j, double sigma_2_j_s, double prior_d);
RcppExport SEXP _DreameSpase_FitSSModel(SEXP ySEXP, SEXP y_countsSEXP, SEXP XSEXP, SEXP groupsSEXP, SEXP n_groupsSEXP, SEXP methodSEXP, SEXP alpha_priorSEXP, SEXP WSEXP, SEXP phiSEXP, SEXP correctionSEXP, SEXP interceptSEXP, SEXP burninSEXP, SEXP samplesSEXP, SEXP thinningSEXP, SEXP verboseSEXP, SEXP progress_everySEXP, SEXP spike_optimSEXP, SEXP update_spike_everySEXP, SEXP sample_deltaSEXP, SEXP sample_gammaSEXP, SEXP sample_dSEXP, SEXP nu_2_initSEXP, SEXP alpha_initSEXP, SEXP delta_initSEXP, SEXP rho_initSEXP, SEXP tau_2_delta_initSEXP, SEXP psi_2_initSEXP, SEXP eta_initSEXP, SEXP d_initSEXP, SEXP gamma_initSEXP, SEXP d_groups_initSEXP, SEXP gamma_groups_initSEXP, SEXP P_gammaSEXP, SEXP P_dSEXP, SEXP nu_2_alphaSEXP, SEXP nu_2_betaSEXP, SEXP tau_s_alphaSEXP, SEXP sigma_2_alpha_spikeSEXP, SEXP sigma_2_alpha_slabSEXP, SEXP gamma_priorSEXP, SEXP a_gammaSEXP, SEXP b_gammaSEXP, SEXP a_dSEXP, SEXP b_dSEXP, SEXP nu_jSEXP, SEXP xiSEXP, SEXP lambda_alphaSEXP, SEXP grid_prior_valuesSEXP, SEXP rho_prior_probsSEXP, SEXP tau_2_delta_alphaSEXP, SEXP tau_2_delta_betaSEXP, SEXP psi_2_alphaSEXP, SEXP psi_2_betaSEXP, SEXP sigma_2_jSEXP, SEXP sigma_2_j_sSEXP, SEXP prior_dSEXP) {
BEGIN_RCPP
    Rcpp::RObject rcpp_result_gen;
    Rcpp::RNGScope rcpp_rngScope_gen;
    Rcpp::traits::input_parameter< arma::vec >::type y(ySEXP);
    Rcpp::traits::input_parameter< arma::vec >::type y_counts(y_countsSEXP);
    Rcpp::traits::input_parameter< arma::mat >::type X(XSEXP);
    Rcpp::traits::input_parameter< std::vector<int> >::type groups(groupsSEXP);
    Rcpp::traits::input_parameter< int >::type n_groups(n_groupsSEXP);
    Rcpp::traits::input_parameter< String >::type method(methodSEXP);
    Rcpp::traits::input_parameter< String >::type alpha_prior(alpha_priorSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::mat> >::type W(WSEXP);
    Rcpp::traits::input_parameter< double >::type phi(phiSEXP);
    Rcpp::traits::input_parameter< double >::type correction(correctionSEXP);
    Rcpp::traits::input_parameter< bool >::type intercept(interceptSEXP);
    Rcpp::traits::input_parameter< int >::type burnin(burninSEXP);
    Rcpp::traits::input_parameter< int >::type samples(samplesSEXP);
    Rcpp::traits::input_parameter< int >::type thinning(thinningSEXP);
    Rcpp::traits::input_parameter< bool >::type verbose(verboseSEXP);
    Rcpp::traits::input_parameter< int >::type progress_every(progress_everySEXP);
    Rcpp::traits::input_parameter< bool >::type spike_optim(spike_optimSEXP);
    Rcpp::traits::input_parameter< int >::type update_spike_every(update_spike_everySEXP);
    Rcpp::traits::input_parameter< bool >::type sample_delta(sample_deltaSEXP);
    Rcpp::traits::input_parameter< bool >::type sample_gamma(sample_gammaSEXP);
    Rcpp::traits::input_parameter< bool >::type sample_d(sample_dSEXP);
    Rcpp::traits::input_parameter< double >::type nu_2_init(nu_2_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type alpha_init(alpha_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type delta_init(delta_initSEXP);
    Rcpp::traits::input_parameter< int >::type rho_init(rho_initSEXP);
    Rcpp::traits::input_parameter< double >::type tau_2_delta_init(tau_2_delta_initSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type psi_2_init(psi_2_initSEXP);
    Rcpp::traits::input_parameter< std::vector<arma::mat> >::type eta_init(eta_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d_init(d_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma_init(gamma_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type d_groups_init(d_groups_initSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma_groups_init(gamma_groups_initSEXP);
    Rcpp::traits::input_parameter< double >::type P_gamma(P_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type P_d(P_dSEXP);
    Rcpp::traits::input_parameter< double >::type nu_2_alpha(nu_2_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type nu_2_beta(nu_2_betaSEXP);
    Rcpp::traits::input_parameter< double >::type tau_s_alpha(tau_s_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_2_alpha_spike(sigma_2_alpha_spikeSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_2_alpha_slab(sigma_2_alpha_slabSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type gamma_prior(gamma_priorSEXP);
    Rcpp::traits::input_parameter< double >::type a_gamma(a_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type b_gamma(b_gammaSEXP);
    Rcpp::traits::input_parameter< double >::type a_d(a_dSEXP);
    Rcpp::traits::input_parameter< double >::type b_d(b_dSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type nu_j(nu_jSEXP);
    Rcpp::traits::input_parameter< double >::type xi(xiSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type lambda_alpha(lambda_alphaSEXP);
    Rcpp::traits::input_parameter< std::vector<double> >::type grid_prior_values(grid_prior_valuesSEXP);
    Rcpp::traits::input_parameter< arma::vec >::type rho_prior_probs(rho_prior_probsSEXP);
    Rcpp::traits::input_parameter< double >::type tau_2_delta_alpha(tau_2_delta_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type tau_2_delta_beta(tau_2_delta_betaSEXP);
    Rcpp::traits::input_parameter< double >::type psi_2_alpha(psi_2_alphaSEXP);
    Rcpp::traits::input_parameter< double >::type psi_2_beta(psi_2_betaSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_2_j(sigma_2_jSEXP);
    Rcpp::traits::input_parameter< double >::type sigma_2_j_s(sigma_2_j_sSEXP);
    Rcpp::traits::input_parameter< double >::type prior_d(prior_dSEXP);
    rcpp_result_gen = Rcpp::wrap(FitSSModel(y, y_counts, X, groups, n_groups, method, alpha_prior, W, phi, correction, intercept, burnin, samples, thinning, verbose, progress_every, spike_optim, update_spike_every, sample_delta, sample_gamma, sample_d, nu_2_init, alpha_init, delta_init, rho_init, tau_2_delta_init, psi_2_init, eta_init, d_init, gamma_init, d_groups_init, gamma_groups_init, P_gamma, P_d, nu_2_alpha, nu_2_beta, tau_s_alpha, sigma_2_alpha_spike, sigma_2_alpha_slab, gamma_prior, a_gamma, b_gamma, a_d, b_d, nu_j, xi, lambda_alpha, grid_prior_values, rho_prior_probs, tau_2_delta_alpha, tau_2_delta_beta, psi_2_alpha, psi_2_beta, sigma_2_j, sigma_2_j_s, prior_d));
    return rcpp_result_gen;
END_RCPP
}

static const R_CallMethodDef CallEntries[] = {
    {"_DreameSpase_FitSSModel", (DL_FUNC) &_DreameSpase_FitSSModel, 56},
    {NULL, NULL, 0}
};

RcppExport void R_init_DreameSpase(DllInfo *dll) {
    R_registerRoutines(dll, NULL, CallEntries, NULL, NULL);
    R_useDynamicSymbols(dll, FALSE);
}
